---
apiVersion: v1
kind: Namespace
metadata:
  name: broker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: broker
  name: broker-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broker
  template:
    metadata:
      labels:
        app: broker
    spec:
      containers:
        - name: broker
          image: public.ecr.aws/f4b9d0l0/swarch-23-2-broker:latest
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  namespace: broker
  name: broker-service
spec:
  type: ClusterIP
  selector:
    app: broker
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: broker
  name: broker-ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/send-timeout: "600"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Access-Control-Allow-Origin,Access-Control-Allow-Methods"
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: broker-service
                port:
                  number: 8080